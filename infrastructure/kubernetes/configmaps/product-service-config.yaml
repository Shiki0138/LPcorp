apiVersion: v1
kind: ConfigMap
metadata:
  name: product-service-config
  namespace: production
  labels:
    app: product-service
    component: backend
data:
  # Database configuration
  database.host: "postgres-primary.production.svc.cluster.local"
  database.port: "5432"
  database.name: "products_db"
  database.pool.size: "20"
  database.pool.timeout: "30s"
  
  # Redis configuration
  redis.host: "redis-master.production.svc.cluster.local"
  redis.port: "6379"
  redis.db: "2"
  redis.pool.size: "50"
  redis.timeout: "5s"
  redis.cache.ttl: "3600"  # 1 hour
  
  # Elasticsearch configuration
  elasticsearch.host: "elasticsearch.production.svc.cluster.local"
  elasticsearch.port: "9200"
  elasticsearch.index: "products"
  elasticsearch.timeout: "10s"
  elasticsearch.max_retries: "3"
  
  # Service configuration
  service.port: "8003"
  service.metrics.port: "9090"
  service.timeout.read: "30s"
  service.timeout.write: "30s"
  service.timeout.idle: "120s"
  
  # Product catalog
  catalog.page_size: "50"
  catalog.max_page_size: "200"
  catalog.cache_duration: "300s"
  
  # Search configuration
  search.min_score: "0.1"
  search.fuzziness: "AUTO"
  search.max_results: "1000"
  
  # Image processing
  image.max_size: "10485760"  # 10MB
  image.allowed_types: "image/jpeg,image/png,image/webp"
  image.thumbnail_sizes: "150x150,300x300,600x600"
  
  # Application configuration
  app.config.yaml: |
    server:
      port: 8003
      host: 0.0.0.0
      graceful_shutdown_timeout: 30s
    
    cache:
      type: redis
      default_ttl: 3600
      max_entries: 10000
    
    search:
      engine: elasticsearch
      batch_size: 100
      index_queue_size: 1000
    
    logging:
      level: info
      format: json
      output: stdout
    
    tracing:
      enabled: true
      service_name: product-service
      endpoint: http://tempo.monitoring.svc.cluster.local:4317
      sample_rate: 0.1
    
    metrics:
      enabled: true
      port: 9090
      path: /metrics