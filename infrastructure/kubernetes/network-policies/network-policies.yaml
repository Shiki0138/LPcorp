# Network Policies for Enterprise System
---
# Default deny all ingress traffic in production namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
  namespace: production
spec:
  podSelector: {}
  policyTypes:
  - Ingress
---
# Default deny all egress traffic except DNS in production namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-egress
  namespace: production
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  # Allow DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
---
# Allow ingress to user-service from Kong
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-user-service-ingress
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: user-service
  policyTypes:
  - Ingress
  ingress:
  - from:
    # From Kong namespace
    - namespaceSelector:
        matchLabels:
          name: kong
      podSelector:
        matchLabels:
          app: kong-proxy
    # From other services in production namespace
    - namespaceSelector:
        matchLabels:
          name: production
      podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - order-service
          - payment-service
    ports:
    - protocol: TCP
      port: 8001
  - from:
    # Prometheus scraping
    - namespaceSelector:
        matchLabels:
          name: monitoring
      podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
---
# Allow ingress to order-service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-order-service-ingress
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: order-service
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: kong
      podSelector:
        matchLabels:
          app: kong-proxy
    ports:
    - protocol: TCP
      port: 8002
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
      podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
---
# Allow ingress to product-service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-product-service-ingress
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: product-service
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: kong
      podSelector:
        matchLabels:
          app: kong-proxy
    - namespaceSelector:
        matchLabels:
          name: production
      podSelector:
        matchLabels:
          app: order-service
    ports:
    - protocol: TCP
      port: 8003
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
      podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
---
# Allow ingress to payment-service (most restrictive)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-payment-service-ingress
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: payment-service
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: kong
      podSelector:
        matchLabels:
          app: kong-proxy
    - namespaceSelector:
        matchLabels:
          name: production
      podSelector:
        matchLabels:
          app: order-service
    ports:
    - protocol: TCP
      port: 8004
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
      podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
---
# Allow services to access databases
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-database-access
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: postgres
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - user-service
          - order-service
          - product-service
          - payment-service
    ports:
    - protocol: TCP
      port: 5432
---
# Allow services to access Redis
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-redis-access
  namespace: production
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - user-service
          - order-service
          - product-service
          - payment-service
    ports:
    - protocol: TCP
      port: 6379
  # Redis sentinel communication
  - from:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 26379
---
# Allow services to access Kafka
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kafka-access
  namespace: production
spec:
  podSelector:
    matchLabels:
      strimzi.io/cluster: enterprise-kafka
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchExpressions:
        - key: app
          operator: In
          values:
          - order-service
          - payment-service
    ports:
    - protocol: TCP
      port: 9092
    - protocol: TCP
      port: 9093
  # Kafka inter-broker communication
  - from:
    - podSelector:
        matchLabels:
          strimzi.io/cluster: enterprise-kafka
    ports:
    - protocol: TCP
      port: 9091
    - protocol: TCP
      port: 2181  # Zookeeper
---
# Allow egress from services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-service-egress
  namespace: production
spec:
  podSelector:
    matchExpressions:
    - key: app
      operator: In
      values:
      - user-service
      - order-service
      - product-service
      - payment-service
  policyTypes:
  - Egress
  egress:
  # DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
  # Internal services
  - to:
    - podSelector: {}
    ports:
    - protocol: TCP
  # External HTTPS (for payment gateway, OAuth, etc)
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 169.254.169.254/32  # Block metadata service
    ports:
    - protocol: TCP
      port: 443
---
# Monitoring namespace policies
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-prometheus-scraping
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app: prometheus
  policyTypes:
  - Egress
  egress:
  # DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
  # Scrape all namespaces
  - to:
    - namespaceSelector: {}
    - podSelector: {}
    ports:
    - protocol: TCP
---
# Infrastructure namespace - more permissive
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: infrastructure-network-policy
  namespace: infrastructure
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector: {}
  egress:
  - to:
    - namespaceSelector: {}
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0